#!/usr/bin/env python

import dirUtils
import sys, os, os.path, shutil
import re

g_srcDir = None
g_dstDir = None
g_verbose = False
g_quiet = False
g_resultDirName = 'Result'
g_targetedExtensions = ('.jpg')

def updatePicture( win_file, src_details ):
    global g_srcDir, g_dstDir, g_resultDirName, g_verbose
    # g_srcDir/(path/to)/Result/(path/to/jpg)
    pattern = g_srcDir + os.sep+r'?' + r'(.*?)' + os.sep+r'+' + g_resultDirName + os.sep+r'+' + r'(.*$)'
    match = re.search( pattern, win_file )
    if not match:
        sys.stderr.write( 'Path not according to pattern: ' + win_file + ' : ' + pattern + '\n' )
        return
    linux_file = os.path.join( g_dstDir, match.group(1), match.group(2) )
   
    shouldCopy = False
    if os.path.exists( linux_file ):
        try:
            linux_details = os.stat( linux_file )
            if src_details.st_mtime > linux_details.st_mtime:
                shouldCopy = True
        except OSError, why:
            sys.stderr.write( why.filename + ': ' + why.strerror +'\n' )
    else:
        if not os.path.exists( os.path.dirname( linux_file ) ):
            os.makedirs( os.path.dirname( linux_file ) )
        shouldCopy = True
    # if src jpg is newer then copy over our picture
    if shouldCopy:
        if not g_quiet:
            print "Copy:", win_file, " -> ", linux_file
        shutil.copyfile( win_file, linux_file )
    elif g_verbose:
        print win_file, " is older than ", linux_file


def updateFromFreshResults( resultDir, stat_details ):
    global g_targetedExtensions
    dirUtils.walk_dirs( resultDir, updatePicture, only_these_files=g_targetedExtensions )

def main(av):
    global g_verbose, g_quiet, g_srcDir, g_dstDir, g_resultDirName
    for arg in av:
        if arg=='-v' or arg=='--verbose': g_verbose = True
        elif arg=='-q' or arg=='--quiet': g_quiet = True
        elif not g_srcDir: g_srcDir = arg
        elif not g_dstDir: g_dstDir = arg
    if not g_srcDir:
        g_srcDir = os.path.join( dirUtils.homeDir, "Pictures/Pictures.win7/_atelier" )
    if not g_dstDir:
        g_dstDir = os.path.join( dirUtils.homeDir, "Pictures/_atelier" )
    if g_quiet:
        g_verbose = False

    #print g_verbose, g_quiet, g_srcDir, g_dstDir
    dirUtils.walk_dirs( g_srcDir, updateFromFreshResults, only_these_dirs=(g_resultDirName) )

if __name__ == "__main__":
    main(sys.argv[1:])
